# Make a directory and immediately navigate to it
take() {
    local DIR=$1
    mkdir -p $DIR && cd $DIR
}

# Pipe help to the manpager if it's not done by default
myhelp() {
    cmd=$1
    if ! type "$cmd" &> /dev/null; then
        echo "'$cmd' command not found."
    else
        if ! alias "$cmd" &> /dev/null; then
            if "$@" --help &> /dev/null; then
                IFS=' ' read -r manpager_cmd manpager_args <<< "$MANPAGER"
                "$manpager_cmd" $manpager_args < <("$@" --help)
            else
                echo "'$cmd' does not support '--help'."
            fi
        else
            cmd_alias=$(alias "$cmd" | sed -E "s/.*='([^']*)'.*/\1/")
            cmd_arr=( ${(Q)${(z)cmd_alias}} )
            help "${cmd_arr[@]}"
        fi
    fi
}

# Update dotfiles
dots-update() {
    MSG="Update for $(date +%d.%m.%y)" && dots log --grep="$MSG" --oneline | grep -q . && dots commit --all --amend --no-edit || dots commit -m "$MSG"
}

# Delete all merged branches
gbda() {
    git branch --no-color --merged | command grep -vE "^([+*]|\s*($(git_main_branch)|$(git_develop_branch))\s*$)" | command xargs git branch --delete 2>/dev/null
}

# Swaps contents of two files
swap() {
    if [ "$#" -lt 2 ]; then
        echo "Usage: swap [file1] [file2]"
        return 1
    fi

    if [ "$1" = "$2" ]; then
        echo "Error: Input files are the same."
        return 1
    fi

    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE && mv "$2" "$1" && mv $TMPFILE "$2"
}

# Ssh somewhere and open tmux
ssh-tmux() {
    ssh -t "$@" -- /bin/sh -c 'tmux has && tmux a || tmux'
}
